user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  # Determines how many clients will be served by each worker process.
  worker_connections 1024;

  # The effective method, used on Linux 2.6+, optmized to serve many clients with each thread.
  use epoll;

  # Accept as many connections as possible, after nginx gets notification about a new connection.
  multi_accept on;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  map $upstream_response_time $temprt {
    default $upstream_response_time;
    "" 0;
  }

  log_format json escape=json '{"@timestamp":"$time_iso8601",'
    '"remote_addr":"$remote_addr",'
    '"body_bytes_sent":"$body_bytes_sent",'
    '"status":$status,'
    '"request":"$request",'
    '"url":"$uri",'
    '"request_method":"$request_method",'
    '"response_time":$temprt,'
    '"http_referrer":"$http_referer",'
    '"http_user_agent":"$http_user_agent"}';

  access_log /var/log/nginx/access.log json;

  # Caches information about open FDs, freqently accessed files.
  open_file_cache max=200000 inactive=20s;
  open_file_cache_valid 30s;
  open_file_cache_min_uses 2;
  open_file_cache_errors on;

  # Sendfile copies data between one FD and other from within the kernel.
  sendfile on;

  # Don't buffer data-sends (disable Nagle algorithm).
  tcp_nodelay on;

  keepalive_timeout 65;

  # Compression.
  gzip on;
  gzip_min_length 10240;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
  gzip_disable "msie6";

  server {
    listen 80;
    listen [::]:80;

    root /var/www;

    index index.html;

    location / {
      try_files $uri $uri/ /index.html;
    }

    location ~ /status {
      try_files $uri.html /status.html;
    }

    location ~ /health {
      try_files $uri.html /health.html;
    }

    location ~ /stub_status {
      stub_status on;
      access_log off;
    }

    location ~ /metrics {
      rewrite /metrics/(.*) /$1 break;
      proxy_http_version 1.1;
      proxy_pass http://127.0.0.1:9113;
    }
  }
}
